(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{295:function(s,e,a){"use strict";a.r(e);var n=a(16),t=Object(n.a)({},(function(){var s=this,e=s._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("p",[s._v("vuepress 使用记录,记录一些使用 vuepress 的时候遇到的坑与一些 api,方便之后的使用")]),s._v(" "),e("h2",{attrs:{id:"全局属性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#全局属性"}},[s._v("#")]),s._v(" 全局属性")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("    $page:获取到这个页面的信息 例如 path、和页面的frontMatter等属性\n    $site:获取当前整个网站的信息 例如路由表\n    $withBase: 可以拼接你的链接,帮你生成正确的路径,也可以在markdown里使用该语法\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[s._v("例如\n"),e("br"),s._v(" "),e("img",{attrs:{src:s.$withBase("/404.jpg")}})]),s._v(" "),e("h2",{attrs:{id:"打包遇到的问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#打包遇到的问题"}},[s._v("#")]),s._v(" 打包遇到的问题")]),s._v(" "),e("p",[s._v("因为 vuepress 是用 node 服务端渲染所以无法识别 window 和 dom 方法和属性,所以确保只在 beforeMount 或者 mounted 访问浏览器 / DOM 的 API;\n"),e("br"),s._v("\n展示一个对于 SSR 不怎么友好的组件可以使用 ClientOnly 组件包裹一下")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("<ClientOnly>\n  <NonSSRFriendlyComponent/>\n</ClientOnly>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[s._v("或者在 mounted 使用动态加载的方式")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("  mounted () {\n    import('./lib-that-access-window-on-import').then(module => {\n      // use code\n    })\n  }\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("h2",{attrs:{id:"markdown-的配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#markdown-的配置"}},[s._v("#")]),s._v(" markdown 的配置")]),s._v(" "),e("p",[s._v("lineNumbers：是否在每个代码块显示行号\nextractHeaders： Markdown 文件的 headers (标题 & 小标题) 会在准备阶段被提取出来 , 并存储在 this.$page.headers 中")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("    markdown: {\n        lineNumbers: true, //是否在每个代码块显示行号\n        extractHeaders: ['h2', 'h3', 'h4', 'h5', 'h6'], // 提取标题到侧边栏的级别，默认['h2', 'h3']\n    },\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])])])}),[],!1,null,null,null);e.default=t.exports}}]);